-- MySQL Script generated by MySQL Workbench
-- Tue Apr 11 09:21:47 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema BagaD
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema BagaD
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `BagaD` DEFAULT CHARACTER SET utf8 ;
USE `BagaD` ;

-- -----------------------------------------------------
-- Table `BagaD`.`type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BagaD`.`type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `label` VARCHAR(45) NOT NULL,
  `with_fee` DECIMAL NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `Label_UNIQUE` (`label` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BagaD`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BagaD`.`role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `label` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BagaD`.`group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BagaD`.`group` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `label` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `label_UNIQUE` (`label` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BagaD`.`instrument`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BagaD`.`instrument` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BagaD`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BagaD`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `phone_number` VARCHAR(10) NOT NULL,
  `mail` VARCHAR(45) NOT NULL,
  `login` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `role_id` INT NOT NULL,
  `group_id` INT NOT NULL,
  `instrument_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `phone_number_UNIQUE` (`phone_number` ASC),
  UNIQUE INDEX `mail_UNIQUE` (`mail` ASC),
  UNIQUE INDEX `Usercol_UNIQUE` (`password` ASC),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC),
  INDEX `fk_user_role1_idx` (`role_id` ASC),
  INDEX `fk_user_group1_idx` (`group_id` ASC),
  INDEX `fk_user_instrument1_idx` (`instrument_id` ASC),
  CONSTRAINT `fk_user_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `BagaD`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_group1`
    FOREIGN KEY (`group_id`)
    REFERENCES `BagaD`.`group` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_instrument1`
    FOREIGN KEY (`instrument_id`)
    REFERENCES `BagaD`.`instrument` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BagaD`.`event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BagaD`.`event` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `start_date` DATETIME NOT NULL,
  `end_date` DATETIME NOT NULL,
  `place` VARCHAR(255) NOT NULL,
  `description` VARCHAR(255) NULL,
  `valid` TINYINT NOT NULL,
  `fee` DECIMAL NULL,
  `type_Id` INT NOT NULL,
  `organizer` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `Nom_UNIQUE` (`name` ASC),
  INDEX `fk_Event_Type_idx` (`type_Id` ASC),
  INDEX `fk_event_user1_idx` (`organizer` ASC),
  CONSTRAINT `fk_Event_Type`
    FOREIGN KEY (`type_Id`)
    REFERENCES `BagaD`.`type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_user1`
    FOREIGN KEY (`organizer`)
    REFERENCES `BagaD`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BagaD`.`user_event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BagaD`.`user_event` (
  `user_id` INT NOT NULL,
  `event_id` INT NOT NULL,
  `confirmed` TINYINT NULL,
  PRIMARY KEY (`user_id`, `event_id`),
  INDEX `fk_user_has_event_event1_idx` (`event_id` ASC),
  INDEX `fk_user_has_event_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_event_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `BagaD`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_event_event1`
    FOREIGN KEY (`event_id`)
    REFERENCES `BagaD`.`event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BagaD`.`article`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BagaD`.`article` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `content` VARCHAR(45) NOT NULL,
  `creation_date` DATETIME NOT NULL,
  `visibility` TINYINT NOT NULL,
  `author` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_article_user1_idx` (`author` ASC),
  CONSTRAINT `fk_article_user1`
    FOREIGN KEY (`author`)
    REFERENCES `BagaD`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BagaD`.`group_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BagaD`.`group_role` (
  `group_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  PRIMARY KEY (`group_id`, `role_id`),
  INDEX `fk_group_has_role_role1_idx` (`role_id` ASC),
  INDEX `fk_group_has_role_group1_idx` (`group_id` ASC),
  CONSTRAINT `fk_group_has_role_group1`
    FOREIGN KEY (`group_id`)
    REFERENCES `BagaD`.`group` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_group_has_role_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `BagaD`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
